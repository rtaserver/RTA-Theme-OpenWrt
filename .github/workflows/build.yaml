name: "Auto compile with OpenWrt SDK"
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  push:
    branches:
      - 'main'
env:
  TZ: Asia/Jakarta


jobs:
  job_check:
    if: github.repository == ${{ github.repository }}
    name: Check Version
    runs-on: ubuntu-latest
    outputs:
      rta_version: ${{ steps.check_version.outputs.latest_version }}
      has_update: ${{ steps.check_version.outputs.has_update }}
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
          ref: 'main'

      - name: Check version
        id: check_version
        env:
          url_release: https://api.github.com/repos/${{ github.repository }}/releases/latest
        run: |
          latest_version=$(grep -oP 'PKG_VERSION:=\K.*' 'luci-theme-rta/Makefile' | sed 's/^/v/')
          latest_release=$(wget -qO- -t1 -T2 ${{env.url_release}} | awk -F '"' '/tag_name/{print $4}')
          has_update=$([ "${latest_version}" != "${latest_release}" ] && echo true || echo false)
          echo "latest_version=${latest_version}" >> $GITHUB_OUTPUT
          echo "has_update=${has_update}" >> $GITHUB_OUTPUT
          echo "latest_version: ${latest_version}"
          echo "latest_release: ${latest_release}"
          echo "has_update: ${has_update}"

  job_build_rta:
    name: Build RTA (main)
    needs: job_check
    runs-on: ubuntu-latest
    steps:
      - name: Install packages
        run: |
          echo "Install packages"
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses-dev git-core subversion gettext unzip zlib1g-dev file perl libssl-dev wget


      - name: Initialization environment
        env:
          url_sdk: https://archive.openwrt.org/releases/21.02.5/targets/x86/64/openwrt-sdk-21.02.5-x86-64_gcc-8.4.0_musl.Linux-x86_64.tar.xz
        run: |
          wget ${{ env.url_sdk }}
          file_name=$(echo ${{env.url_sdk}} | awk -F/ '{print $NF}')
          mkdir sdk && tar -xJf $file_name -C ./sdk --strip-components=1
          cd sdk  
          echo "src-git base https://github.com/openwrt/openwrt.git;openwrt-21.02" > feeds.conf
          echo "src-git-full packages https://github.com/openwrt/packages.git;openwrt-21.02" >> feeds.conf
          echo "src-git-full luci https://git.openwrt.org/project/luci.git;openwrt-21.02" >> feeds.conf
          echo "src-git-full routing https://git.openwrt.org/feed/routing.git;openwrt-21.02"  >> feeds.conf
          git clone https://github.com/${{ github.repository }}.git package/downloads
          ./scripts/feeds update -a
          ./scripts/feeds install -d n luci-theme-rta
          ./scripts/feeds install -d n luci-app-rtaconfig

      - name: Configure RTA (main)
        run: |
          cd sdk
          ./scripts/feeds install luci-theme-rta
          ./scripts/feeds install luci-app-rtaconfig
          make defconfig

      - name: Compile RTA (main)
        id: compile
        run: |
          cd sdk
          make package/luci-theme-rta/compile
          make package/luci-app-rtaconfig/compile
          mv bin/packages/x86_64/base/ ../
          cd ..
          echo "status=success" >> $GITHUB_OUTPUT
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV

      - name: Upload RTA (main) ipks to release
        uses: softprops/action-gh-release@v1
        if: steps.compile.outputs.status == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: OpenWrt RTA Theme | Version ${{needs.job_check.outputs.rta_version}}
          tag_name: ${{needs.job_check.outputs.rta_version}}
          files: ${{ env.FIRMWARE }}/base/*.ipk

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2.0.3
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 1
          keep_minimum_runs: 0
